import { reactive } from 'vue'

export type State = {
	token: string,
	loginUser: UTSJSONObject,
	program: UTSJSONObject,
	programFolder: string,
	activeDevice: UTSJSONObject
}

export type UserState = {
	state: State,
	setToken: (token: string) => void,
	setProgram:(program: UTSJSONObject) => void,
	setProgramFolder: (folderPath: string) => void,
	setActiveDevice: (device: UTSJSONObject) => void,
	setLoginUser: (userInfo: UTSJSONObject) => void
}

const state = reactive<State>({
	token: ''
	loginUser: {}
	program: {}
	programFolder: ''
	activeDevice: {}
} as State)

export function useState() {
	const setToken = (token: string) => {
		state.token = token
		uni.setStorageSync('token', token);
	}
	const setProgram = (program: UTSJSONObject) => {
		state.program = program
		uni.setStorageSync('program', program);
	}
	
	const setProgramFolder = (folderPath: string) => {
		state.programFolder = folderPath;
		uni.setStorageSync('program-folder', folderPath);
	}
	
	const setActiveDevice = (device: UTSJSONObject) => {
		state.activeDevice = device
		uni.setStorageSync('active-device', device);
	}
  
	const setLoginUser = (userInfo: UTSJSONObject) => {
		state.loginUser = userInfo
		uni.setStorageSync('userInfo', userInfo);
	}

	return {
		state,
		setProgram,
		setProgramFolder,
		setLoginUser,
		setToken,
		setActiveDevice
	} as UserState
}