<template>
	<view class="app has-tabbar">
		<view class="global_status_bar"></view>
		<view class="body">
			<!-- 页面正文 -->
			<view class="devices">
				<view 
					v-if="JSON.stringify(activeUser) != '{}'" 
					class="device-has-connected">
					<view style="width: 100%;">
						<view class="device-image">
							<image class="image" src="/static/icon/display.png" :fade-show="true" mode="widthFix"></image>
						</view>
						<view class="device-name">
							<text class="t">{{JSON.stringify(activeDevice) != '{}' ? activeDevice['name'] : '--'}}</text>
						</view>
						<view class="device-info">
							<view class="item" style="width: 65%">
								<text class="t">SN CODE</text>
								<text class="v">{{JSON.stringify(activeDevice) != '{}' ? activeDevice['snCode'] : '--'}}</text>
							</view>
							<view class="item" style="width: 35%">
								<text class="t">{{ $t('index.BelongingUser') }}</text>
								<text class="v">{{JSON.stringify(activeUser) != '{}' ? activeUser['account'] : '--'}}</text>
							</view>
						</view>
						<view class="device-buttons">
							<button class="btn" size="mini" @click="handleDisconnect()">
								+ {{ $t('index.Reselect') }}
							</button>
						</view>
					</view>
				</view>
				<view v-else  class="device-not-connected">
					<view>
						<view class="image-box">
							 <image class="image" :fade-show="true" mode="widthFix" src="/static/icon/display_gray.png"></image>
						</view>
						<view class="text-box">
							<text class="desc">{{ $t('index.Choice') }}</text>
						</view>
						<view class="button-box">
							<button class="button" size="mini" @click="handleGotoSelectDevice()">
								+ {{ $t('index.SelectDevice') }}
							</button>
						</view>
					</view>
				</view>
			</view>
			<view class="space-box"></view>
			<view class="quick-create-program">
				<view class="texts">
					<view class="text-box">
						<text class="t1"> {{ $t("index.QuickProgram") }}</text>
						<text class="t2">/ {{ $t("index.Steps") }}</text>
					</view>
					<view class="text-box">
						<text class="t3">1. {{ $t("index.AddMedia") }}</text>
						<text class="t3">2. {{ $t("index.TypesettingEdit") }}</text>
						<text class="t3">3. {{ $t("index.OneClick") }}</text>
					</view>
				</view>
				<view class="btn-box">
					<button class="btn" @click="createPopup = true">
					      {{ $t("index.Make") }}
					</button>
				</view>
			</view>
			<view class="space-box"></view>
			<view class="home-menus">
				<view class="column">
					<view class="menu-box " @click="handleGotoSelectProgram()">
						<view class="text-box">
							<text class="menu-name">  {{ $t("index.ProgramManagement") }}</text>
							<text class="menu-desc"> {{ $t("index.ProgramRelease") }}</text>
						</view>
						<view class="icon-box">
							<image class="image" src="/static/icon/10.png" mode="aspectFill"></image>
						</view>
					</view>
				</view>
				<view class="column">
					<view class="menu-box " @click="handleGotoEditDevice()">
						<view class="text-box">
							<text class="menu-name">{{ $t("index.DeviceControl") }}</text>
							<text class="menu-desc">{{ $t("index.DeviceManagementandControl") }}</text>
						</view>
						<view class="icon-box">
							<image class="image" src="/static/icon/4.png" mode="aspectFill"></image>
						</view>
					</view>
				</view>
			</view>
			<!-- 页面正文结束-->
			<!-- popup -->
			<popup-default
				v-model:visible="createPopup"
				:title="$t('index.ProgramRelease')"
				:show-icon="false"
				icon-src="/static/svg/suggest.png"
				@confirm="handleSubmit"
				>
				<view class="program-meta">
					<view class="item">
						<view class="item-title"><text class="t">{{ $t("index.ProgramName") }}</text></view>
						<view class="item-body">
							<view class="program-size">
								<view class="input-box" style="width: 100%">
									<input id="name" class="uni-input" v-model="newProgram['name']" />
								</view>
							</view>
						</view>
					</view>
					<view class="item">
						<view class="item-title"><text class="t">{{ $t("index.ProgramResolution") }}</text></view>
						<view class="item-body">
							<view class="program-size">
								<view class="input-box">
									<input id="width" class="uni-input" v-model="newProgram['width']"  />
								</view>
								<view class="input-box">
									<input id="height" class="uni-input" v-model="newProgram['height']"  />
								</view>
							</view>
						</view>
					</view>
					
				</view>
			</popup-default>
			<!-- popup -->
		</view>
	</view>
</template>

<script lang="uts">
	import { getCurrentTimeYYMMDDHHmmss } from '@/utils/index.uts'
	import { useState } from '@/store/index.uts'
	import { routeGoto } from '@/common/router.uts'
	export default {
		data() {
			return {
				title: 'Hello',
				createPopup: false,
				checkLayoutIndex: 0,
				userInfo: {} as UTSJSONObject,
				activeUser: {} as UTSJSONObject,
				activeDevice: {} as UTSJSONObject,
				token: '' as String,
				newProgram: {
					name: '节目名称' + getCurrentTimeYYMMDDHHmmss(),
					width: 256,
					height: 192
				} as UTSJSONObject,
			}
		},
		onLoad() {
			uni.setNavigationBarTitle({
				title: this.$t('pages.home')
			});
		},
		onShow(){
			let that = this
			const { state } = useState();
			if (state.token != '' && state.loginUser['id'] != null) {
				that.userInfo = state.loginUser;
				that.activeUser = state.activeUser;
				that.activeDevice = state.activeDevice;
			}
			else {
				uni.showModal({
					title: "尚未登录，请您先登录??",
					success: (res: UniShowModalResult) => {
						if(res.confirm){
							uni.switchTab({
								url: '/pages/user/index'
							});
						}
					}
				})
			}
		},
		methods: {
			handleSubmit(){
				this.createPopup = false;
				routeGoto('/pages/programs/editor?name=' + this.newProgram['name'] + '&width=' + this.newProgram['width'] + '&height=' + this.newProgram['height'] );
			},
			handleGotoEditDevice(){
				if(JSON.stringify(this.activeDevice) != '{}'){
					routeGoto('/pages/devices/edit?device_id=' + this.activeDevice.id);
				}else{
					uni.showModal({
						title: "请您先选择设备?",
						success: (res: UniShowModalResult) => {
							if(res.confirm){
								routeGoto('/pages/index/users');
							}
						}
					})
				}
			},
			handleDisconnect(){				
				const { setActiveUser, setActiveDevice } = useState();
				setActiveUser({});
				setActiveDevice({});
				
				if (this.userInfo['role'] == 'user') {
					setActiveUser(this.userInfo);
					routeGoto('/pages/index/devices')
				}
				else {
					routeGoto('/pages/index/users')					
				}				
			},
			handleGotoSelectDevice(){
				if (this.userInfo['role'] == 'user') {
					const { setActiveUser } = useState();
					setActiveUser(this.userInfo);
					routeGoto('/pages/index/devices')
				}
				else {
					routeGoto('/pages/index/users')
				}
			},
			handleGotoSelectProgram() {
				if (this.userInfo['role'] == 'user') {
					const { setActiveUser, setProgramFolder } = useState();
					setActiveUser(this.userInfo);					
					setProgramFolder(`${uni.env.USER_DATA_PATH}/temp/program/${this.userInfo['account'] as string}`);
				}
				
				routeGoto('/pages/programs/index');
			},
			handleCloudManage(){
				uni.showToast({
					icon: 'none',
				    title: '尚未开放该功能'
				})
			}
		}
	}
</script>

<style lang="scss" scoped>
	.swiper-box{
		width: 100%;
		height: 340rpx;
		.swiper-item{
			width: 100%;
			height: 340rpx;
			border-radius: $uni-border-radius-lg;
			.image{
				width: 100%;
				border-radius: $uni-border-radius-lg;
			}
		}
	}
	.devices {
		background-color: $uni-bg-color;
		background-image: linear-gradient(to bottom, #edf2ff, #f4f1ff);
		width: 100%;
		height: 460rpx;
		border-radius: $uni-border-radius-lg;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 24rpx;
		
		.device-not-connected{
			width: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			.image-box {
				display: flex;
				align-items: center;
				justify-content: center;
				.image {
					width: 64px;
				}
			}
			.text-box {
				display: flex;
				align-items: center;
				justify-content: center;
				padding: 18px 0 0 0;
				.desc{
					font-size: $uni-font-size-sm;
				}
			}
			.button-box {
				display: flex;
				align-items: center;
				justify-content: center;
				padding-top: 12px;
				width: 100%;
				.button{
					// background-color: $uni-color-primary;
					background-image: linear-gradient(to right, #c7adff, #9891ff);
					color: $uni-text-color-inverse;
					border-radius: 80px;
					width: 80%;
					padding: 8rpx 0;
				}
			}
		}
		.device-has-connected{
			width: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			.device-image {
				display: flex;
				align-items: center;
				justify-content: center;
				.image {
					width: 64px;
				}
			}
			.device-name{
				padding: 12rpx 0 12rpx 0;
				.t{
					font-size: 38rpx;
					font-weight: bold;
					text-align: center;
				}
			}
			.device-info{
				background-color: rgba(255, 255, 255, 0.25);
				border-radius: 22rpx;
				display: flex;
				flex-direction: row;
				align-items: center;
				justify-content: space-between;
				padding: 24rpx 18rpx;
				width: 100%;
				
				.item{
					.t{
						width: 100%;
						text-align: center;
						font-size: 24rpx;
						color: #666666;
					}
					.v{
						width: 100%;
						text-align: center;
						font-size: 28rpx;
						color: #333333;
						font-weight: bold;
						padding-top: 8rpx;
					}
				}
			}
			.device-buttons{
				padding: 36rpx 0 0 0;
				flex-direction: row;
				align-items: center;
				justify-content: center;
				.btn{
					background-image: linear-gradient(to right, #c7adff, #9891ff);
					color: $uni-text-color-inverse;
					border-radius: 80px;
					padding: 8rpx 32rpx;
					font-weight: bold;
				}
				.vline{
					color: #999999;
					font-size: 24rpx;
					padding: 0 24rpx;
				}
			}
		}
	}
	.home-menus{
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		
		.column{
			width: 48%;
			.menu-box{
				border-radius: $uni-border-radius-lg;
				background-color: $uni-bg-color;
				height: 100px;
				flex-direction: row;
				align-items: center;
				justify-content: space-between;
				padding: 24rpx 36rpx;
				.text-box{
					.menu-name{
						font-size: 32rpx;
						font-weight: bold;
						padding: 12rpx 0;
					}
					.menu-desc{
						font-size: 20rpx;
						color: #999999;
					}
				}
				.icon-box{
					width: 64rpx;
					height: 64rpx;
					.image{
						width: 64rpx;
						height: 64rpx;
					}
				}
			}
			.menu-box.menu-box-big{
				height: 216px;
				flex-direction: column;
				padding: 52rpx 0;
				.text-box{
					width: 100%;
					padding: 0 36rpx;
				}
				.icon-box{
					width: 100%;
					padding: 0 36rpx;
					flex-direction: row;
					justify-content: flex-end;
				}
			}
		}
	}
	.quick-create-program{
		padding: 24rpx 36rpx;
		height: 120px;
		background-image: linear-gradient(to right,#3e90ff,#58c5fe);
		border-radius: $uni-border-radius-lg;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		.texts{
			width: 68%;
			.text-box{
				flex-direction: row;
				align-items: center;
				justify-content: flex-start;
				padding: 24rpx 0;
				.t1{
					font-size: 32rpx;
					font-weight: bold;
					color: $uni-text-color-inverse;
				}
				.t2{
					font-size: 24rpx;
					color: $uni-text-color-inverse;
				}
				.t3{
					font-size: 24rpx;
					color: $uni-text-color-inverse;
					padding-right: 12rpx;
				}
			}
		}
		.btn-box{
			.btn{
				border-radius: 120rpx;
				border: none;
				color: $uni-color-primary;
				font-size: 28rpx;
			}
		}
	}
	.cloud-manage{
		padding: 24rpx 36rpx;
		height: 120px;
		background-color: $uni-bg-color-light-blue;
		background-image: linear-gradient(to right,#def1f8,#ffffff);
		border-radius: $uni-border-radius-lg;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		
		.cm-text{
			.cm-text-t1{
				font-size: 42rpx;
				font-weight: bold;
				color: $uni-color-primary;
			}
			.cm-text-t2{
				font-size: 28rpx;
				color: #6dadff;
			}
		}
		.cm-icon{
			width: 128rpx;
			height: 128rpx;
			.image{
				width: 100%;
				height: 100%;
			}
		}
	}
	.program-meta{
		.item{
			padding: 24rpx 0;
			.item-title {
				.t {
					color: $uni-text-color-grey;
				}
			}
			.item-body{
				padding-top: 24rpx;
				.program-size{
					flex-direction: row;
					align-items: center;
					justify-content: space-between;
					.input-box{
						width: 45%;
						.uni-input{
							background-color: $uni-bg-color-grey;
							border-radius: $uni-border-radius-lg;
							font-size: $uni-font-size-lg;
							padding: 24rpx 32rpx;
						}
					}
					
				}
				.program-layout{
					flex-direction: row;
					align-items: center;
					justify-content: space-between;
					.layout{
						flex-direction: row;
						align-items: center;
						justify-content: center;
						padding: 8rpx;
					}
					.layout.checked{
						background-color: $uni-bg-color-light-blue;
						border-radius: $uni-border-radius-lg;
					}
				}
			}
		}
	}
	
</style>
